'use strict';

const fs = require('fs');

process.stdin.resume();
process.stdin.setEncoding('utf-8');

let inputString = '';
let currentLine = 0;

process.stdin.on('data', function(inputStdin) {
    inputString += inputStdin;
});

process.stdin.on('end', function() {
    inputString = inputString.split('\n');

    main();
});

function readLine() {
    return inputString[currentLine++];
}

/*
 * Complete the 'countingValleys' function below.
 *
 * The function is expected to return an INTEGER.
 * The function accepts following parameters:
 *  1. INTEGER steps
 *  2. STRING path
 */

function countingValleys(steps, path) {
    // Write your code here
    let k,x = [],y=[];
    
    x = path.split('');
    x.forEach(i => {
        if(i==='D') y.push(-1);
        else y.push(1);
    })
    console.log(x);console.log(y);
    let p = 0,cnt=0,temp=0;
    for( let i = 0; i < y.length; i++){
        temp = p;
        p += y[i];
        // console.log("i ",i);
        // console.log("p ",p);
        if(p===0 && (temp<0)) {cnt++};
    }
    return cnt;
}

function main() {
    const ws = fs.createWriteStream(process.env.OUTPUT_PATH);

    const steps = parseInt(readLine().trim(), 10);

    const path = readLine();

    const result = countingValleys(steps, path);

    ws.write(result + '\n');

    ws.end();
}
