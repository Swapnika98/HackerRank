'use strict';

process.stdin.resume();
process.stdin.setEncoding('utf-8');

let inputString = '';
let currentLine = 0;

process.stdin.on('data', inputStdin => {
    inputString += inputStdin;
});

process.stdin.on('end', _ => {
    inputString = inputString.replace(/\s*$/, '')
        .split('\n')
        .map(str => str.replace(/\s*$/, ''));

    main();
});

function readLine() {
    return inputString[currentLine++];
}


function insertionSort1(n, arr) {
    const e = arr[arr.length - 1];
    
    for(let i=arr.length-2; i>=0; i--) {
        let value = arr[i];
        if (value > e) {
            arr[i + 1] = value;            
            console.log(arr.join(' '))
            if (i === 0) {
                arr[i] = e;
                console.log(arr.join(' '))
            }
        } else if (value < e) {
            arr[i + 1] = e;
            console.log(arr.join(' '))
            break;
        }
       
    }

}

function main() {
    const n = parseInt(readLine(), 10);

    const arr = readLine().split(' ').map(arrTemp => parseInt(arrTemp, 10));

    insertionSort1(n, arr);
}
