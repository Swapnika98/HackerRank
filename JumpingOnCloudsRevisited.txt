'use strict';

const fs = require('fs');

process.stdin.resume();
process.stdin.setEncoding('utf-8');

let inputString = '';
let currentLine = 0;

process.stdin.on('data', inputStdin => {
    inputString += inputStdin;
});

process.stdin.on('end', _ => {
    inputString = inputString.replace(/\s*$/, '')
        .split('\n')
        .map(str => str.replace(/\s*$/, ''));

    main();
});

function readLine() {
    return inputString[currentLine++];
}

// Complete the jumpingOnClouds function below.
function jumpingOnClouds(c, k) {
    let e = 100;
    let i=k;
    while(true){
        if(k===c.length){
            if(c[0]===1) return e-3;
            return e-1;
        }
        e--;
        if(c[i]===1){
            e-=2;
        }
        i = i+k;
        console.log("e in w"+e);
        console.log(k);
        console.log(i);
        if(i>=c.length) {i = i%c.length;console.log("i in if"+i);console.log("k in if"+k);};
        if(i===0){
            e--;
            console.log(k);
            console.log(e);
            if(c[i]===1){
                
                e-=2;
                console.log("e in if"+e);
            }
        break;
        }
        console.log("e"+e);
    }
    return e;
}

function main() {
    const ws = fs.createWriteStream(process.env.OUTPUT_PATH);

    const nk = readLine().split(' ');

    const n = parseInt(nk[0], 10);

    const k = parseInt(nk[1], 10);

    const c = readLine().split(' ').map(cTemp => parseInt(cTemp, 10));

    let result = jumpingOnClouds(c, k);

    ws.write(result + "\n");

    ws.end();
}
